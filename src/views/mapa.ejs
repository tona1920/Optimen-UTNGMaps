<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="initial-scale=1,user-scalable=no,maximum-scale=1,width=device-width">
        <meta name="mobile-web-app-capable" content="yes">
        <meta name="apple-mobile-web-app-capable" content="yes">
        <link rel="stylesheet" href="css/mapa/leaflet.css">
        <link rel="stylesheet" href="css/mapa/qgis2web.css">
        <link rel="stylesheet" href="css/mapa/fontawesome-all.min.css">
        <style>
        #map {
            width: 100%;
            height: 689px;
        }
        </style>
        <title>UNTG MAPS</title>
    </head>
    <body>
        <div id="map">
        </div>
        <script src="js/mapa/qgis2web_expressions.js"></script>
        <script src="js/mapa/leaflet.js"></script>
        <script src="js/mapa/leaflet.rotatedMarker.js"></script>
        <script src="js/mapa/leaflet.pattern.js"></script>
        <script src="js/mapa/leaflet-hash.js"></script>
        <script src="js/mapa/Autolinker.min.js"></script>
        <script src="js/mapa/rbush.min.js"></script>
        <script src="js/mapa/labelgun.min.js"></script>
        <script src="js/mapa/labels.js"></script>
        <script src="data/Estados_1.js"></script>
        <script src="data/DensidaddePoblacinporMetrocuadrado_2.js"></script>
        <script src="data/Localidades_3.js"></script>
        <script src="data/Presas_4.js"></script>
        <script src="data/Acueducto_5.js"></script>
        <script src="data/reasdecultivos_6.js"></script>
        <script src="data/reasverdes_7.js"></script>
        <script src="data/Calles_8.js"></script>
        <script src="data/Caminos_9.js"></script>
        <script src="data/Canales_10.js"></script>
        <script src="data/Carreteras_11.js"></script>
        <script src="data/CorrientesdeAgua_12.js"></script>
        <script>
        var highlightLayer;
        function highlightFeature(e) {
            highlightLayer = e.target;

            if (e.target.feature.geometry.type === 'LineString') {
              highlightLayer.setStyle({
                color: '#ffff00',
              });
            } else {
              highlightLayer.setStyle({
                fillColor: '#ffff00',
                fillOpacity: 1
              });
            }
        }
        var map = L.map('map', {
            zoomControl:true, maxZoom:28, minZoom:1
        }).fitBounds([[5.544137841117523,-114.05733106432646],[25.115506473396024,-90.1272733480034]]).setView([21.16729076280168, -100.93106351719217], 15);
        var hash = new L.Hash(map);
        map.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
        var autolinker = new Autolinker({truncate: {length: 30, location: 'smart'}});
        var bounds_group = new L.featureGroup([]);
        function setBounds() {
        }
        map.createPane('pane_GoogleSatellite_0');
        map.getPane('pane_GoogleSatellite_0').style.zIndex = 400;
        var layer_GoogleSatellite_0 = L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
            pane: 'pane_GoogleSatellite_0',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 28,
            minNativeZoom: 0,
            maxNativeZoom: 19
        });
        layer_GoogleSatellite_0;
        map.addLayer(layer_GoogleSatellite_0);
        function pop_Estados_1(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['CODIGO'] !== null ? autolinker.link(feature.properties['CODIGO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['ESTADO'] !== null ? autolinker.link(feature.properties['ESTADO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Tabulado_P'] !== null ? autolinker.link(feature.properties['Tabulado_P'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['AREAS'] !== null ? autolinker.link(feature.properties['AREAS'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['DEN'] !== null ? autolinker.link(feature.properties['DEN'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['AREA_KM'] !== null ? autolinker.link(feature.properties['AREA_KM'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Estados_1_0() {
            return {
                pane: 'pane_Estados_1',
                opacity: 1,
                color: 'rgba(0,0,0,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(133,182,111,0.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Estados_1');
        map.getPane('pane_Estados_1').style.zIndex = 401;
        map.getPane('pane_Estados_1').style['mix-blend-mode'] = 'normal';
        var layer_Estados_1 = new L.geoJson(json_Estados_1, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Estados_1',
            layerName: 'layer_Estados_1',
            pane: 'pane_Estados_1',
            onEachFeature: pop_Estados_1,
            style: style_Estados_1_0,
        });
        bounds_group.addLayer(layer_Estados_1);
        map.addLayer(layer_Estados_1);
        function pop_DensidaddePoblacinporMetrocuadrado_2(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">CODIGO</th>\
                        <td>' + (feature.properties['CODIGO'] !== null ? autolinker.link(feature.properties['CODIGO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>ESTADO</strong><br />' + (feature.properties['ESTADO'] !== null ? autolinker.link(feature.properties['ESTADO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Tabulado_P'] !== null ? autolinker.link(feature.properties['Tabulado_P'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['AREAS'] !== null ? autolinker.link(feature.properties['AREAS'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">DEN</th>\
                        <td>' + (feature.properties['DEN'] !== null ? autolinker.link(feature.properties['DEN'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">AREA_KM</th>\
                        <td>' + (feature.properties['AREA_KM'] !== null ? autolinker.link(feature.properties['AREA_KM'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_DensidaddePoblacinporMetrocuadrado_2_0(feature) {
            if (feature.properties['DEN'] >= 11.050000 && feature.properties['DEN'] <= 21.071667 ) {
                return {
                pane: 'pane_DensidaddePoblacinporMetrocuadrado_2',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,255,255,0.0)',
                interactive: true,
            }
            }
            if (feature.properties['DEN'] >= 21.071667 && feature.properties['DEN'] <= 44.840000 ) {
                return {
                pane: 'pane_DensidaddePoblacinporMetrocuadrado_2',
                opacity: 1,
                color: 'rgba(255,204,204,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,255,255,0.0)',
                interactive: true,
            }
            }
            if (feature.properties['DEN'] >= 44.840000 && feature.properties['DEN'] <= 68.345000 ) {
                return {
                pane: 'pane_DensidaddePoblacinporMetrocuadrado_2',
                opacity: 1,
                color: 'rgba(255,153,153,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,153,153,0.0)',
                interactive: true,
            }
            }
            if (feature.properties['DEN'] >= 68.345000 && feature.properties['DEN'] <= 110.200000 ) {
                return {
                pane: 'pane_DensidaddePoblacinporMetrocuadrado_2',
                opacity: 1,
                color: 'rgba(255,102,102,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,102,102,0.0)',
                interactive: true,
            }
            }
            if (feature.properties['DEN'] >= 110.200000 && feature.properties['DEN'] <= 202.133333 ) {
                return {
                pane: 'pane_DensidaddePoblacinporMetrocuadrado_2',
                opacity: 1,
                color: 'rgba(255,51,51,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,51,51,0.0)',
                interactive: true,
            }
            }
            if (feature.properties['DEN'] >= 202.133333 && feature.properties['DEN'] <= 6944.000000 ) {
                return {
                pane: 'pane_DensidaddePoblacinporMetrocuadrado_2',
                opacity: 1,
                color: 'rgba(255,0,0,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,0,0,0.0)',
                interactive: true,
            }
            }
        }
        map.createPane('pane_DensidaddePoblacinporMetrocuadrado_2');
        map.getPane('pane_DensidaddePoblacinporMetrocuadrado_2').style.zIndex = 402;
        map.getPane('pane_DensidaddePoblacinporMetrocuadrado_2').style['mix-blend-mode'] = 'normal';
        var layer_DensidaddePoblacinporMetrocuadrado_2 = new L.geoJson(json_DensidaddePoblacinporMetrocuadrado_2, {
            attribution: '',
            interactive: true,
            dataVar: 'json_DensidaddePoblacinporMetrocuadrado_2',
            layerName: 'layer_DensidaddePoblacinporMetrocuadrado_2',
            pane: 'pane_DensidaddePoblacinporMetrocuadrado_2',
            onEachFeature: pop_DensidaddePoblacinporMetrocuadrado_2,
            style: style_DensidaddePoblacinporMetrocuadrado_2_0,
        });
        bounds_group.addLayer(layer_DensidaddePoblacinporMetrocuadrado_2);
        map.addLayer(layer_DensidaddePoblacinporMetrocuadrado_2);
        function pop_Localidades_3(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cve_loc'] !== null ? autolinker.link(feature.properties['cve_loc'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cve_mun'] !== null ? autolinker.link(feature.properties['cve_mun'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cve_edo'] !== null ? autolinker.link(feature.properties['cve_edo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['nume_hab'] !== null ? autolinker.link(feature.properties['nume_hab'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tipo'] !== null ? autolinker.link(feature.properties['tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Localidades_3_0() {
            return {
                pane: 'pane_Localidades_3',
                opacity: 1,
                color: 'rgba(227,26,28,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(190,178,151,0.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Localidades_3');
        map.getPane('pane_Localidades_3').style.zIndex = 403;
        map.getPane('pane_Localidades_3').style['mix-blend-mode'] = 'normal';
        var layer_Localidades_3 = new L.geoJson(json_Localidades_3, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Localidades_3',
            layerName: 'layer_Localidades_3',
            pane: 'pane_Localidades_3',
            onEachFeature: pop_Localidades_3,
            style: style_Localidades_3_0,
        });
        bounds_group.addLayer(layer_Localidades_3);
        map.addLayer(layer_Localidades_3);
        function pop_Presas_4(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['condicion'] !== null ? autolinker.link(feature.properties['condicion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Presas_4_0() {
            return {
                pane: 'pane_Presas_4',
                opacity: 1,
                color: 'rgba(31,120,180,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(114,155,111,0.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Presas_4');
        map.getPane('pane_Presas_4').style.zIndex = 404;
        map.getPane('pane_Presas_4').style['mix-blend-mode'] = 'normal';
        var layer_Presas_4 = new L.geoJson(json_Presas_4, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Presas_4',
            layerName: 'layer_Presas_4',
            pane: 'pane_Presas_4',
            onEachFeature: pop_Presas_4,
            style: style_Presas_4_0,
        });
        bounds_group.addLayer(layer_Presas_4);
        map.addLayer(layer_Presas_4);
        function pop_Acueducto_5(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['condicion'] !== null ? autolinker.link(feature.properties['condicion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['rela_suel'] !== null ? autolinker.link(feature.properties['rela_suel'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Acueducto_5_0() {
            return {
                pane: 'pane_Acueducto_5',
                opacity: 1,
                color: 'rgba(190,178,151,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 1.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_Acueducto_5');
        map.getPane('pane_Acueducto_5').style.zIndex = 405;
        map.getPane('pane_Acueducto_5').style['mix-blend-mode'] = 'normal';
        var layer_Acueducto_5 = new L.geoJson(json_Acueducto_5, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Acueducto_5',
            layerName: 'layer_Acueducto_5',
            pane: 'pane_Acueducto_5',
            onEachFeature: pop_Acueducto_5,
            style: style_Acueducto_5_0,
        });
        bounds_group.addLayer(layer_Acueducto_5);
        map.addLayer(layer_Acueducto_5);
        function pop_reasdecultivos_6(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_reasdecultivos_6_0() {
            return {
                pane: 'pane_reasdecultivos_6',
                opacity: 1,
                color: 'rgba(51,160,44,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(196,60,57,0.0)',
                interactive: true,
            }
        }
        map.createPane('pane_reasdecultivos_6');
        map.getPane('pane_reasdecultivos_6').style.zIndex = 406;
        map.getPane('pane_reasdecultivos_6').style['mix-blend-mode'] = 'normal';
        var layer_reasdecultivos_6 = new L.geoJson(json_reasdecultivos_6, {
            attribution: '',
            interactive: true,
            dataVar: 'json_reasdecultivos_6',
            layerName: 'layer_reasdecultivos_6',
            pane: 'pane_reasdecultivos_6',
            onEachFeature: pop_reasdecultivos_6,
            style: style_reasdecultivos_6_0,
        });
        bounds_group.addLayer(layer_reasdecultivos_6);
        map.addLayer(layer_reasdecultivos_6);
        function pop_reasverdes_7(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_reasverdes_7_0() {
            return {
                pane: 'pane_reasverdes_7',
                opacity: 1,
                color: 'rgba(98,135,58,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(229,182,54,0.0)',
                interactive: true,
            }
        }
        map.createPane('pane_reasverdes_7');
        map.getPane('pane_reasverdes_7').style.zIndex = 407;
        map.getPane('pane_reasverdes_7').style['mix-blend-mode'] = 'normal';
        var layer_reasverdes_7 = new L.geoJson(json_reasverdes_7, {
            attribution: '',
            interactive: true,
            dataVar: 'json_reasverdes_7',
            layerName: 'layer_reasverdes_7',
            pane: 'pane_reasverdes_7',
            onEachFeature: pop_reasverdes_7,
            style: style_reasverdes_7_0,
        });
        bounds_group.addLayer(layer_reasverdes_7);
        map.addLayer(layer_reasverdes_7);
        function pop_Calles_8(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tipo'] !== null ? autolinker.link(feature.properties['tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Calles_8_0() {
            return {
                pane: 'pane_Calles_8',
                opacity: 1,
                color: 'rgba(152,125,183,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 1.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_Calles_8');
        map.getPane('pane_Calles_8').style.zIndex = 408;
        map.getPane('pane_Calles_8').style['mix-blend-mode'] = 'normal';
        var layer_Calles_8 = new L.geoJson(json_Calles_8, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Calles_8',
            layerName: 'layer_Calles_8',
            pane: 'pane_Calles_8',
            onEachFeature: pop_Calles_8,
            style: style_Calles_8_0,
        });
        bounds_group.addLayer(layer_Calles_8);
        map.addLayer(layer_Calles_8);
        function pop_Caminos_9(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tipo'] !== null ? autolinker.link(feature.properties['tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Caminos_9_0() {
            return {
                pane: 'pane_Caminos_9',
                opacity: 1,
                color: 'rgba(231,113,72,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 1.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_Caminos_9');
        map.getPane('pane_Caminos_9').style.zIndex = 409;
        map.getPane('pane_Caminos_9').style['mix-blend-mode'] = 'normal';
        var layer_Caminos_9 = new L.geoJson(json_Caminos_9, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Caminos_9',
            layerName: 'layer_Caminos_9',
            pane: 'pane_Caminos_9',
            onEachFeature: pop_Caminos_9,
            style: style_Caminos_9_0,
        });
        bounds_group.addLayer(layer_Caminos_9);
        map.addLayer(layer_Caminos_9);
        function pop_Canales_10(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['condicion'] !== null ? autolinker.link(feature.properties['condicion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Canales_10_0() {
            return {
                pane: 'pane_Canales_10',
                opacity: 1,
                color: 'rgba(183,72,75,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 1.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_Canales_10');
        map.getPane('pane_Canales_10').style.zIndex = 410;
        map.getPane('pane_Canales_10').style['mix-blend-mode'] = 'normal';
        var layer_Canales_10 = new L.geoJson(json_Canales_10, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Canales_10',
            layerName: 'layer_Canales_10',
            pane: 'pane_Canales_10',
            onEachFeature: pop_Canales_10,
            style: style_Canales_10_0,
        });
        bounds_group.addLayer(layer_Canales_10);
        map.addLayer(layer_Canales_10);
        function pop_Carreteras_11(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['numero'] !== null ? autolinker.link(feature.properties['numero'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['nume_carr'] !== null ? autolinker.link(feature.properties['nume_carr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['condicion'] !== null ? autolinker.link(feature.properties['condicion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['administ'] !== null ? autolinker.link(feature.properties['administ'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tipo'] !== null ? autolinker.link(feature.properties['tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['dere_tran'] !== null ? autolinker.link(feature.properties['dere_tran'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['jurisdicci'] !== null ? autolinker.link(feature.properties['jurisdicci'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Carreteras_11_0() {
            return {
                pane: 'pane_Carreteras_11',
                opacity: 1,
                color: 'rgba(255,158,23,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 1.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_Carreteras_11');
        map.getPane('pane_Carreteras_11').style.zIndex = 411;
        map.getPane('pane_Carreteras_11').style['mix-blend-mode'] = 'normal';
        var layer_Carreteras_11 = new L.geoJson(json_Carreteras_11, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Carreteras_11',
            layerName: 'layer_Carreteras_11',
            pane: 'pane_Carreteras_11',
            onEachFeature: pop_Carreteras_11,
            style: style_Carreteras_11_0,
        });
        bounds_group.addLayer(layer_Carreteras_11);
        map.addLayer(layer_Carreteras_11);
        function pop_CorrientesdeAgua_12(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['geografico'] !== null ? autolinker.link(feature.properties['geografico'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['condicion'] !== null ? autolinker.link(feature.properties['condicion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['codigo'] !== null ? autolinker.link(feature.properties['codigo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['cali_repr'] !== null ? autolinker.link(feature.properties['cali_repr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['carta'] !== null ? autolinker.link(feature.properties['carta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['identifica'] !== null ? autolinker.link(feature.properties['identifica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['objectid'] !== null ? autolinker.link(feature.properties['objectid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_CorrientesdeAgua_12_0() {
            return {
                pane: 'pane_CorrientesdeAgua_12',
                opacity: 1,
                color: 'rgba(141,90,153,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 1.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_CorrientesdeAgua_12');
        map.getPane('pane_CorrientesdeAgua_12').style.zIndex = 412;
        map.getPane('pane_CorrientesdeAgua_12').style['mix-blend-mode'] = 'normal';
        var layer_CorrientesdeAgua_12 = new L.geoJson(json_CorrientesdeAgua_12, {
            attribution: '',
            interactive: true,
            dataVar: 'json_CorrientesdeAgua_12',
            layerName: 'layer_CorrientesdeAgua_12',
            pane: 'pane_CorrientesdeAgua_12',
            onEachFeature: pop_CorrientesdeAgua_12,
            style: style_CorrientesdeAgua_12_0,
        });
        bounds_group.addLayer(layer_CorrientesdeAgua_12);
        map.addLayer(layer_CorrientesdeAgua_12);
        var baseMaps = {};
        L.control.layers(baseMaps,{'<img src="legend/CorrientesdeAgua_12.png" /> Corrientes de Agua': layer_CorrientesdeAgua_12,'<img src="legend/Carreteras_11.png" /> Carreteras': layer_Carreteras_11,'<img src="legend/Canales_10.png" /> Canales': layer_Canales_10,'<img src="legend/Caminos_9.png" /> Caminos': layer_Caminos_9,'<img src="legend/Calles_8.png" /> Calles': layer_Calles_8,'<img src="legend/reasverdes_7.png" /> Áreas verdes ': layer_reasverdes_7,'<img src="legend/reasdecultivos_6.png" /> Áreas de cultivos': layer_reasdecultivos_6,'<img src="legend/Acueducto_5.png" /> Acueducto': layer_Acueducto_5,'<img src="legend/Presas_4.png" /> Presas': layer_Presas_4,'<img src="legend/Localidades_3.png" /> Localidades': layer_Localidades_3,'Densidad de Población por Metro cuadrado<br /><table><tr><td style="text-align: center;"><img src="legend/DensidaddePoblacinporMetrocuadrado_2_11210.png" /></td><td>11 - 21</td></tr><tr><td style="text-align: center;"><img src="legend/DensidaddePoblacinporMetrocuadrado_2_21451.png" /></td><td>21 - 45</td></tr><tr><td style="text-align: center;"><img src="legend/DensidaddePoblacinporMetrocuadrado_2_45682.png" /></td><td>45 - 68</td></tr><tr><td style="text-align: center;"><img src="legend/DensidaddePoblacinporMetrocuadrado_2_681103.png" /></td><td>68 - 110</td></tr><tr><td style="text-align: center;"><img src="legend/DensidaddePoblacinporMetrocuadrado_2_1102024.png" /></td><td>110 - 202</td></tr><tr><td style="text-align: center;"><img src="legend/DensidaddePoblacinporMetrocuadrado_2_20269445.png" /></td><td>202 - 6944</td></tr></table>': layer_DensidaddePoblacinporMetrocuadrado_2,'<img src="legend/Estados_1.png" /> Estados': layer_Estados_1,"Google Satellite": layer_GoogleSatellite_0,},{collapsed:false}).addTo(map);
        setBounds();
        </script>
    </body>
</html>